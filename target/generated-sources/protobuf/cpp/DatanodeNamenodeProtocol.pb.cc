// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DatanodeNamenodeProtocol.proto

#include "DatanodeNamenodeProtocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_HdfsProtocol_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HdfsProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_IdProto;
}  // namespace protobuf_HdfsProtocol_2eproto
namespace cn {
namespace edu {
namespace cn {
namespace tsinghua {
namespace hdfs {
namespace protocol {
class RegisterRequestProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterRequestProto>
      _instance;
} _RegisterRequestProto_default_instance_;
class RegisterResponseProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<RegisterResponseProto>
      _instance;
} _RegisterResponseProto_default_instance_;
class HeartbeatRequestProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeartbeatRequestProto>
      _instance;
} _HeartbeatRequestProto_default_instance_;
class HeartbeatResponseProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<HeartbeatResponseProto>
      _instance;
} _HeartbeatResponseProto_default_instance_;
}  // namespace protocol
}  // namespace hdfs
}  // namespace tsinghua
}  // namespace cn
}  // namespace edu
}  // namespace cn
namespace protobuf_DatanodeNamenodeProtocol_2eproto {
static void InitDefaultsRegisterRequestProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cn::edu::cn::tsinghua::hdfs::protocol::_RegisterRequestProto_default_instance_;
    new (ptr) ::cn::edu::cn::tsinghua::hdfs::protocol::RegisterRequestProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cn::edu::cn::tsinghua::hdfs::protocol::RegisterRequestProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_RegisterRequestProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsRegisterRequestProto}, {
      &protobuf_HdfsProtocol_2eproto::scc_info_IdProto.base,}};

static void InitDefaultsRegisterResponseProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cn::edu::cn::tsinghua::hdfs::protocol::_RegisterResponseProto_default_instance_;
    new (ptr) ::cn::edu::cn::tsinghua::hdfs::protocol::RegisterResponseProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cn::edu::cn::tsinghua::hdfs::protocol::RegisterResponseProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_RegisterResponseProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRegisterResponseProto}, {}};

static void InitDefaultsHeartbeatRequestProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cn::edu::cn::tsinghua::hdfs::protocol::_HeartbeatRequestProto_default_instance_;
    new (ptr) ::cn::edu::cn::tsinghua::hdfs::protocol::HeartbeatRequestProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cn::edu::cn::tsinghua::hdfs::protocol::HeartbeatRequestProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_HeartbeatRequestProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsHeartbeatRequestProto}, {
      &protobuf_HdfsProtocol_2eproto::scc_info_IdProto.base,}};

static void InitDefaultsHeartbeatResponseProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cn::edu::cn::tsinghua::hdfs::protocol::_HeartbeatResponseProto_default_instance_;
    new (ptr) ::cn::edu::cn::tsinghua::hdfs::protocol::HeartbeatResponseProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cn::edu::cn::tsinghua::hdfs::protocol::HeartbeatResponseProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_HeartbeatResponseProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsHeartbeatResponseProto}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_RegisterRequestProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_RegisterResponseProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HeartbeatRequestProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_HeartbeatResponseProto.base);
}

::google::protobuf::Metadata file_level_metadata[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cn::edu::cn::tsinghua::hdfs::protocol::RegisterRequestProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cn::edu::cn::tsinghua::hdfs::protocol::RegisterRequestProto, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cn::edu::cn::tsinghua::hdfs::protocol::RegisterResponseProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cn::edu::cn::tsinghua::hdfs::protocol::RegisterResponseProto, issuccessful_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cn::edu::cn::tsinghua::hdfs::protocol::HeartbeatRequestProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cn::edu::cn::tsinghua::hdfs::protocol::HeartbeatRequestProto, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cn::edu::cn::tsinghua::hdfs::protocol::HeartbeatRequestProto, hasregistered_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cn::edu::cn::tsinghua::hdfs::protocol::HeartbeatResponseProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cn::edu::cn::tsinghua::hdfs::protocol::HeartbeatResponseProto, issuccessful_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::cn::edu::cn::tsinghua::hdfs::protocol::RegisterRequestProto)},
  { 6, -1, sizeof(::cn::edu::cn::tsinghua::hdfs::protocol::RegisterResponseProto)},
  { 12, -1, sizeof(::cn::edu::cn::tsinghua::hdfs::protocol::HeartbeatRequestProto)},
  { 19, -1, sizeof(::cn::edu::cn::tsinghua::hdfs::protocol::HeartbeatResponseProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::cn::edu::cn::tsinghua::hdfs::protocol::_RegisterRequestProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cn::edu::cn::tsinghua::hdfs::protocol::_RegisterResponseProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cn::edu::cn::tsinghua::hdfs::protocol::_HeartbeatRequestProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cn::edu::cn::tsinghua::hdfs::protocol::_HeartbeatResponseProto_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "DatanodeNamenodeProtocol.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\036DatanodeNamenodeProtocol.proto\022 cn.edu"
      ".cn.tsinghua.hdfs.protocol\032\022HdfsProtocol"
      ".proto\"M\n\024RegisterRequestProto\0225\n\002id\030\001 \001"
      "(\0132).cn.edu.cn.tsinghua.hdfs.protocol.Id"
      "Proto\"-\n\025RegisterResponseProto\022\024\n\014isSucc"
      "essful\030\001 \001(\010\"e\n\025HeartbeatRequestProto\0225\n"
      "\002id\030\001 \001(\0132).cn.edu.cn.tsinghua.hdfs.prot"
      "ocol.IdProto\022\025\n\rhasRegistered\030\002 \001(\010\".\n\026H"
      "eartbeatResponseProto\022\024\n\014isSuccessful\030\001 "
      "\001(\0102\227\002\n\030DatanodeNamenodeProtocol\022{\n\010regi"
      "ster\0226.cn.edu.cn.tsinghua.hdfs.protocol."
      "RegisterRequestProto\0327.cn.edu.cn.tsinghu"
      "a.hdfs.protocol.RegisterResponseProto\022~\n"
      "\theartbeat\0227.cn.edu.cn.tsinghua.hdfs.pro"
      "tocol.HeartbeatRequestProto\0328.cn.edu.cn."
      "tsinghua.hdfs.protocol.HeartbeatResponse"
      "ProtoB\?\n\035cn.edu.tsinghua.hdfs.protocolB\036"
      "DatanodeNamenodeProtocolProtosb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 718);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "DatanodeNamenodeProtocol.proto", &protobuf_RegisterTypes);
  ::protobuf_HdfsProtocol_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_DatanodeNamenodeProtocol_2eproto
namespace cn {
namespace edu {
namespace cn {
namespace tsinghua {
namespace hdfs {
namespace protocol {

// ===================================================================

void RegisterRequestProto::InitAsDefaultInstance() {
  ::cn::edu::cn::tsinghua::hdfs::protocol::_RegisterRequestProto_default_instance_._instance.get_mutable()->id_ = const_cast< ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto*>(
      ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto::internal_default_instance());
}
void RegisterRequestProto::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterRequestProto::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterRequestProto::RegisterRequestProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DatanodeNamenodeProtocol_2eproto::scc_info_RegisterRequestProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto)
}
RegisterRequestProto::RegisterRequestProto(const RegisterRequestProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto)
}

void RegisterRequestProto::SharedCtor() {
  id_ = NULL;
}

RegisterRequestProto::~RegisterRequestProto() {
  // @@protoc_insertion_point(destructor:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto)
  SharedDtor();
}

void RegisterRequestProto::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void RegisterRequestProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegisterRequestProto::descriptor() {
  ::protobuf_DatanodeNamenodeProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DatanodeNamenodeProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterRequestProto& RegisterRequestProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_DatanodeNamenodeProtocol_2eproto::scc_info_RegisterRequestProto.base);
  return *internal_default_instance();
}


void RegisterRequestProto::Clear() {
// @@protoc_insertion_point(message_clear_start:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool RegisterRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .cn.edu.cn.tsinghua.hdfs.protocol.IdProto id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto)
  return false;
#undef DO_
}

void RegisterRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .cn.edu.cn.tsinghua.hdfs.protocol.IdProto id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto)
}

::google::protobuf::uint8* RegisterRequestProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .cn.edu.cn.tsinghua.hdfs.protocol.IdProto id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto)
  return target;
}

size_t RegisterRequestProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .cn.edu.cn.tsinghua.hdfs.protocol.IdProto id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterRequestProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterRequestProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto)
    MergeFrom(*source);
  }
}

void RegisterRequestProto::MergeFrom(const RegisterRequestProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::cn::edu::cn::tsinghua::hdfs::protocol::IdProto::MergeFrom(from.id());
  }
}

void RegisterRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterRequestProto::CopyFrom(const RegisterRequestProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterRequestProto::IsInitialized() const {
  return true;
}

void RegisterRequestProto::Swap(RegisterRequestProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterRequestProto::InternalSwap(RegisterRequestProto* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegisterRequestProto::GetMetadata() const {
  protobuf_DatanodeNamenodeProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DatanodeNamenodeProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void RegisterResponseProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterResponseProto::kIsSuccessfulFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterResponseProto::RegisterResponseProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DatanodeNamenodeProtocol_2eproto::scc_info_RegisterResponseProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cn.edu.cn.tsinghua.hdfs.protocol.RegisterResponseProto)
}
RegisterResponseProto::RegisterResponseProto(const RegisterResponseProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  issuccessful_ = from.issuccessful_;
  // @@protoc_insertion_point(copy_constructor:cn.edu.cn.tsinghua.hdfs.protocol.RegisterResponseProto)
}

void RegisterResponseProto::SharedCtor() {
  issuccessful_ = false;
}

RegisterResponseProto::~RegisterResponseProto() {
  // @@protoc_insertion_point(destructor:cn.edu.cn.tsinghua.hdfs.protocol.RegisterResponseProto)
  SharedDtor();
}

void RegisterResponseProto::SharedDtor() {
}

void RegisterResponseProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* RegisterResponseProto::descriptor() {
  ::protobuf_DatanodeNamenodeProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DatanodeNamenodeProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterResponseProto& RegisterResponseProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_DatanodeNamenodeProtocol_2eproto::scc_info_RegisterResponseProto.base);
  return *internal_default_instance();
}


void RegisterResponseProto::Clear() {
// @@protoc_insertion_point(message_clear_start:cn.edu.cn.tsinghua.hdfs.protocol.RegisterResponseProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  issuccessful_ = false;
  _internal_metadata_.Clear();
}

bool RegisterResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cn.edu.cn.tsinghua.hdfs.protocol.RegisterResponseProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isSuccessful = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccessful_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cn.edu.cn.tsinghua.hdfs.protocol.RegisterResponseProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cn.edu.cn.tsinghua.hdfs.protocol.RegisterResponseProto)
  return false;
#undef DO_
}

void RegisterResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cn.edu.cn.tsinghua.hdfs.protocol.RegisterResponseProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isSuccessful = 1;
  if (this->issuccessful() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccessful(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cn.edu.cn.tsinghua.hdfs.protocol.RegisterResponseProto)
}

::google::protobuf::uint8* RegisterResponseProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cn.edu.cn.tsinghua.hdfs.protocol.RegisterResponseProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isSuccessful = 1;
  if (this->issuccessful() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccessful(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cn.edu.cn.tsinghua.hdfs.protocol.RegisterResponseProto)
  return target;
}

size_t RegisterResponseProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cn.edu.cn.tsinghua.hdfs.protocol.RegisterResponseProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool isSuccessful = 1;
  if (this->issuccessful() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RegisterResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cn.edu.cn.tsinghua.hdfs.protocol.RegisterResponseProto)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterResponseProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterResponseProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cn.edu.cn.tsinghua.hdfs.protocol.RegisterResponseProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cn.edu.cn.tsinghua.hdfs.protocol.RegisterResponseProto)
    MergeFrom(*source);
  }
}

void RegisterResponseProto::MergeFrom(const RegisterResponseProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cn.edu.cn.tsinghua.hdfs.protocol.RegisterResponseProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.issuccessful() != 0) {
    set_issuccessful(from.issuccessful());
  }
}

void RegisterResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cn.edu.cn.tsinghua.hdfs.protocol.RegisterResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterResponseProto::CopyFrom(const RegisterResponseProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cn.edu.cn.tsinghua.hdfs.protocol.RegisterResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterResponseProto::IsInitialized() const {
  return true;
}

void RegisterResponseProto::Swap(RegisterResponseProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterResponseProto::InternalSwap(RegisterResponseProto* other) {
  using std::swap;
  swap(issuccessful_, other->issuccessful_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata RegisterResponseProto::GetMetadata() const {
  protobuf_DatanodeNamenodeProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DatanodeNamenodeProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HeartbeatRequestProto::InitAsDefaultInstance() {
  ::cn::edu::cn::tsinghua::hdfs::protocol::_HeartbeatRequestProto_default_instance_._instance.get_mutable()->id_ = const_cast< ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto*>(
      ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto::internal_default_instance());
}
void HeartbeatRequestProto::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeartbeatRequestProto::kIdFieldNumber;
const int HeartbeatRequestProto::kHasRegisteredFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatRequestProto::HeartbeatRequestProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DatanodeNamenodeProtocol_2eproto::scc_info_HeartbeatRequestProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto)
}
HeartbeatRequestProto::HeartbeatRequestProto(const HeartbeatRequestProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto(*from.id_);
  } else {
    id_ = NULL;
  }
  hasregistered_ = from.hasregistered_;
  // @@protoc_insertion_point(copy_constructor:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto)
}

void HeartbeatRequestProto::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hasregistered_) -
      reinterpret_cast<char*>(&id_)) + sizeof(hasregistered_));
}

HeartbeatRequestProto::~HeartbeatRequestProto() {
  // @@protoc_insertion_point(destructor:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto)
  SharedDtor();
}

void HeartbeatRequestProto::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void HeartbeatRequestProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HeartbeatRequestProto::descriptor() {
  ::protobuf_DatanodeNamenodeProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DatanodeNamenodeProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeartbeatRequestProto& HeartbeatRequestProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_DatanodeNamenodeProtocol_2eproto::scc_info_HeartbeatRequestProto.base);
  return *internal_default_instance();
}


void HeartbeatRequestProto::Clear() {
// @@protoc_insertion_point(message_clear_start:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  hasregistered_ = false;
  _internal_metadata_.Clear();
}

bool HeartbeatRequestProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .cn.edu.cn.tsinghua.hdfs.protocol.IdProto id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool hasRegistered = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &hasregistered_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto)
  return false;
#undef DO_
}

void HeartbeatRequestProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .cn.edu.cn.tsinghua.hdfs.protocol.IdProto id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // bool hasRegistered = 2;
  if (this->hasregistered() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->hasregistered(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto)
}

::google::protobuf::uint8* HeartbeatRequestProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .cn.edu.cn.tsinghua.hdfs.protocol.IdProto id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // bool hasRegistered = 2;
  if (this->hasregistered() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->hasregistered(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto)
  return target;
}

size_t HeartbeatRequestProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .cn.edu.cn.tsinghua.hdfs.protocol.IdProto id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // bool hasRegistered = 2;
  if (this->hasregistered() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeartbeatRequestProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartbeatRequestProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatRequestProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto)
    MergeFrom(*source);
  }
}

void HeartbeatRequestProto::MergeFrom(const HeartbeatRequestProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::cn::edu::cn::tsinghua::hdfs::protocol::IdProto::MergeFrom(from.id());
  }
  if (from.hasregistered() != 0) {
    set_hasregistered(from.hasregistered());
  }
}

void HeartbeatRequestProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatRequestProto::CopyFrom(const HeartbeatRequestProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatRequestProto::IsInitialized() const {
  return true;
}

void HeartbeatRequestProto::Swap(HeartbeatRequestProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatRequestProto::InternalSwap(HeartbeatRequestProto* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(hasregistered_, other->hasregistered_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HeartbeatRequestProto::GetMetadata() const {
  protobuf_DatanodeNamenodeProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DatanodeNamenodeProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void HeartbeatResponseProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeartbeatResponseProto::kIsSuccessfulFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeartbeatResponseProto::HeartbeatResponseProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_DatanodeNamenodeProtocol_2eproto::scc_info_HeartbeatResponseProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatResponseProto)
}
HeartbeatResponseProto::HeartbeatResponseProto(const HeartbeatResponseProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  issuccessful_ = from.issuccessful_;
  // @@protoc_insertion_point(copy_constructor:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatResponseProto)
}

void HeartbeatResponseProto::SharedCtor() {
  issuccessful_ = false;
}

HeartbeatResponseProto::~HeartbeatResponseProto() {
  // @@protoc_insertion_point(destructor:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatResponseProto)
  SharedDtor();
}

void HeartbeatResponseProto::SharedDtor() {
}

void HeartbeatResponseProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* HeartbeatResponseProto::descriptor() {
  ::protobuf_DatanodeNamenodeProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DatanodeNamenodeProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HeartbeatResponseProto& HeartbeatResponseProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_DatanodeNamenodeProtocol_2eproto::scc_info_HeartbeatResponseProto.base);
  return *internal_default_instance();
}


void HeartbeatResponseProto::Clear() {
// @@protoc_insertion_point(message_clear_start:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatResponseProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  issuccessful_ = false;
  _internal_metadata_.Clear();
}

bool HeartbeatResponseProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatResponseProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool isSuccessful = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &issuccessful_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatResponseProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatResponseProto)
  return false;
#undef DO_
}

void HeartbeatResponseProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatResponseProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isSuccessful = 1;
  if (this->issuccessful() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->issuccessful(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatResponseProto)
}

::google::protobuf::uint8* HeartbeatResponseProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatResponseProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool isSuccessful = 1;
  if (this->issuccessful() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->issuccessful(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatResponseProto)
  return target;
}

size_t HeartbeatResponseProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatResponseProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool isSuccessful = 1;
  if (this->issuccessful() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HeartbeatResponseProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatResponseProto)
  GOOGLE_DCHECK_NE(&from, this);
  const HeartbeatResponseProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HeartbeatResponseProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatResponseProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatResponseProto)
    MergeFrom(*source);
  }
}

void HeartbeatResponseProto::MergeFrom(const HeartbeatResponseProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatResponseProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.issuccessful() != 0) {
    set_issuccessful(from.issuccessful());
  }
}

void HeartbeatResponseProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeartbeatResponseProto::CopyFrom(const HeartbeatResponseProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatResponseProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeartbeatResponseProto::IsInitialized() const {
  return true;
}

void HeartbeatResponseProto::Swap(HeartbeatResponseProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeartbeatResponseProto::InternalSwap(HeartbeatResponseProto* other) {
  using std::swap;
  swap(issuccessful_, other->issuccessful_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata HeartbeatResponseProto::GetMetadata() const {
  protobuf_DatanodeNamenodeProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_DatanodeNamenodeProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protocol
}  // namespace hdfs
}  // namespace tsinghua
}  // namespace cn
}  // namespace edu
}  // namespace cn
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cn::edu::cn::tsinghua::hdfs::protocol::RegisterRequestProto* Arena::CreateMaybeMessage< ::cn::edu::cn::tsinghua::hdfs::protocol::RegisterRequestProto >(Arena* arena) {
  return Arena::CreateInternal< ::cn::edu::cn::tsinghua::hdfs::protocol::RegisterRequestProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cn::edu::cn::tsinghua::hdfs::protocol::RegisterResponseProto* Arena::CreateMaybeMessage< ::cn::edu::cn::tsinghua::hdfs::protocol::RegisterResponseProto >(Arena* arena) {
  return Arena::CreateInternal< ::cn::edu::cn::tsinghua::hdfs::protocol::RegisterResponseProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cn::edu::cn::tsinghua::hdfs::protocol::HeartbeatRequestProto* Arena::CreateMaybeMessage< ::cn::edu::cn::tsinghua::hdfs::protocol::HeartbeatRequestProto >(Arena* arena) {
  return Arena::CreateInternal< ::cn::edu::cn::tsinghua::hdfs::protocol::HeartbeatRequestProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cn::edu::cn::tsinghua::hdfs::protocol::HeartbeatResponseProto* Arena::CreateMaybeMessage< ::cn::edu::cn::tsinghua::hdfs::protocol::HeartbeatResponseProto >(Arena* arena) {
  return Arena::CreateInternal< ::cn::edu::cn::tsinghua::hdfs::protocol::HeartbeatResponseProto >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

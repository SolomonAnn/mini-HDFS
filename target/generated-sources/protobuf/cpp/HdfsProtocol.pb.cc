// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: HdfsProtocol.proto

#include "HdfsProtocol.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_HdfsProtocol_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_HdfsProtocol_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_IdProto;
}  // namespace protobuf_HdfsProtocol_2eproto
namespace cn {
namespace edu {
namespace cn {
namespace tsinghua {
namespace hdfs {
namespace protocol {
class PathProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PathProto>
      _instance;
} _PathProto_default_instance_;
class IdProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<IdProto>
      _instance;
} _IdProto_default_instance_;
class BlockProtoDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BlockProto>
      _instance;
} _BlockProto_default_instance_;
}  // namespace protocol
}  // namespace hdfs
}  // namespace tsinghua
}  // namespace cn
}  // namespace edu
}  // namespace cn
namespace protobuf_HdfsProtocol_2eproto {
static void InitDefaultsPathProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cn::edu::cn::tsinghua::hdfs::protocol::_PathProto_default_instance_;
    new (ptr) ::cn::edu::cn::tsinghua::hdfs::protocol::PathProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cn::edu::cn::tsinghua::hdfs::protocol::PathProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PathProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPathProto}, {}};

static void InitDefaultsIdProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cn::edu::cn::tsinghua::hdfs::protocol::_IdProto_default_instance_;
    new (ptr) ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_IdProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsIdProto}, {}};

static void InitDefaultsBlockProto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::cn::edu::cn::tsinghua::hdfs::protocol::_BlockProto_default_instance_;
    new (ptr) ::cn::edu::cn::tsinghua::hdfs::protocol::BlockProto();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::cn::edu::cn::tsinghua::hdfs::protocol::BlockProto::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_BlockProto =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBlockProto}, {
      &protobuf_HdfsProtocol_2eproto::scc_info_IdProto.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PathProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_IdProto.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BlockProto.base);
}

::google::protobuf::Metadata file_level_metadata[3];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cn::edu::cn::tsinghua::hdfs::protocol::PathProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cn::edu::cn::tsinghua::hdfs::protocol::PathProto, src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cn::edu::cn::tsinghua::hdfs::protocol::PathProto, haspermission_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cn::edu::cn::tsinghua::hdfs::protocol::IdProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cn::edu::cn::tsinghua::hdfs::protocol::IdProto, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cn::edu::cn::tsinghua::hdfs::protocol::IdProto, rpcport_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cn::edu::cn::tsinghua::hdfs::protocol::IdProto, socketport_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cn::edu::cn::tsinghua::hdfs::protocol::BlockProto, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cn::edu::cn::tsinghua::hdfs::protocol::BlockProto, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cn::edu::cn::tsinghua::hdfs::protocol::BlockProto, src_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cn::edu::cn::tsinghua::hdfs::protocol::BlockProto, offset_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::cn::edu::cn::tsinghua::hdfs::protocol::BlockProto, length_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::cn::edu::cn::tsinghua::hdfs::protocol::PathProto)},
  { 7, -1, sizeof(::cn::edu::cn::tsinghua::hdfs::protocol::IdProto)},
  { 15, -1, sizeof(::cn::edu::cn::tsinghua::hdfs::protocol::BlockProto)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::cn::edu::cn::tsinghua::hdfs::protocol::_PathProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cn::edu::cn::tsinghua::hdfs::protocol::_IdProto_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::cn::edu::cn::tsinghua::hdfs::protocol::_BlockProto_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "HdfsProtocol.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022HdfsProtocol.proto\022 cn.edu.cn.tsinghua"
      ".hdfs.protocol\"/\n\tPathProto\022\013\n\003src\030\001 \001(\t"
      "\022\025\n\rhasPermission\030\002 \001(\010\":\n\007IdProto\022\n\n\002ip"
      "\030\001 \001(\t\022\017\n\007rpcPort\030\002 \001(\r\022\022\n\nsocketPort\030\003 "
      "\001(\r\"p\n\nBlockProto\0225\n\002id\030\001 \001(\0132).cn.edu.c"
      "n.tsinghua.hdfs.protocol.IdProto\022\013\n\003src\030"
      "\002 \001(\t\022\016\n\006offset\030\003 \001(\004\022\016\n\006length\030\004 \001(\004B3\n"
      "\035cn.edu.tsinghua.hdfs.protocolB\022HdfsProt"
      "ocolProtosb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 338);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "HdfsProtocol.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_HdfsProtocol_2eproto
namespace cn {
namespace edu {
namespace cn {
namespace tsinghua {
namespace hdfs {
namespace protocol {

// ===================================================================

void PathProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PathProto::kSrcFieldNumber;
const int PathProto::kHasPermissionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PathProto::PathProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HdfsProtocol_2eproto::scc_info_PathProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cn.edu.cn.tsinghua.hdfs.protocol.PathProto)
}
PathProto::PathProto(const PathProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.src().size() > 0) {
    src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_);
  }
  haspermission_ = from.haspermission_;
  // @@protoc_insertion_point(copy_constructor:cn.edu.cn.tsinghua.hdfs.protocol.PathProto)
}

void PathProto::SharedCtor() {
  src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  haspermission_ = false;
}

PathProto::~PathProto() {
  // @@protoc_insertion_point(destructor:cn.edu.cn.tsinghua.hdfs.protocol.PathProto)
  SharedDtor();
}

void PathProto::SharedDtor() {
  src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PathProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PathProto::descriptor() {
  ::protobuf_HdfsProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HdfsProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PathProto& PathProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HdfsProtocol_2eproto::scc_info_PathProto.base);
  return *internal_default_instance();
}


void PathProto::Clear() {
// @@protoc_insertion_point(message_clear_start:cn.edu.cn.tsinghua.hdfs.protocol.PathProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  haspermission_ = false;
  _internal_metadata_.Clear();
}

bool PathProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cn.edu.cn.tsinghua.hdfs.protocol.PathProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string src = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->src().data(), static_cast<int>(this->src().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cn.edu.cn.tsinghua.hdfs.protocol.PathProto.src"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool hasPermission = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &haspermission_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cn.edu.cn.tsinghua.hdfs.protocol.PathProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cn.edu.cn.tsinghua.hdfs.protocol.PathProto)
  return false;
#undef DO_
}

void PathProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cn.edu.cn.tsinghua.hdfs.protocol.PathProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string src = 1;
  if (this->src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->src().data(), static_cast<int>(this->src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cn.edu.cn.tsinghua.hdfs.protocol.PathProto.src");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->src(), output);
  }

  // bool hasPermission = 2;
  if (this->haspermission() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->haspermission(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cn.edu.cn.tsinghua.hdfs.protocol.PathProto)
}

::google::protobuf::uint8* PathProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cn.edu.cn.tsinghua.hdfs.protocol.PathProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string src = 1;
  if (this->src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->src().data(), static_cast<int>(this->src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cn.edu.cn.tsinghua.hdfs.protocol.PathProto.src");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->src(), target);
  }

  // bool hasPermission = 2;
  if (this->haspermission() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->haspermission(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cn.edu.cn.tsinghua.hdfs.protocol.PathProto)
  return target;
}

size_t PathProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cn.edu.cn.tsinghua.hdfs.protocol.PathProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string src = 1;
  if (this->src().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src());
  }

  // bool hasPermission = 2;
  if (this->haspermission() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PathProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cn.edu.cn.tsinghua.hdfs.protocol.PathProto)
  GOOGLE_DCHECK_NE(&from, this);
  const PathProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PathProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cn.edu.cn.tsinghua.hdfs.protocol.PathProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cn.edu.cn.tsinghua.hdfs.protocol.PathProto)
    MergeFrom(*source);
  }
}

void PathProto::MergeFrom(const PathProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cn.edu.cn.tsinghua.hdfs.protocol.PathProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.src().size() > 0) {

    src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_);
  }
  if (from.haspermission() != 0) {
    set_haspermission(from.haspermission());
  }
}

void PathProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cn.edu.cn.tsinghua.hdfs.protocol.PathProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PathProto::CopyFrom(const PathProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cn.edu.cn.tsinghua.hdfs.protocol.PathProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PathProto::IsInitialized() const {
  return true;
}

void PathProto::Swap(PathProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PathProto::InternalSwap(PathProto* other) {
  using std::swap;
  src_.Swap(&other->src_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(haspermission_, other->haspermission_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PathProto::GetMetadata() const {
  protobuf_HdfsProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HdfsProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void IdProto::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IdProto::kIpFieldNumber;
const int IdProto::kRpcPortFieldNumber;
const int IdProto::kSocketPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IdProto::IdProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HdfsProtocol_2eproto::scc_info_IdProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cn.edu.cn.tsinghua.hdfs.protocol.IdProto)
}
IdProto::IdProto(const IdProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  ::memcpy(&rpcport_, &from.rpcport_,
    static_cast<size_t>(reinterpret_cast<char*>(&socketport_) -
    reinterpret_cast<char*>(&rpcport_)) + sizeof(socketport_));
  // @@protoc_insertion_point(copy_constructor:cn.edu.cn.tsinghua.hdfs.protocol.IdProto)
}

void IdProto::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rpcport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&socketport_) -
      reinterpret_cast<char*>(&rpcport_)) + sizeof(socketport_));
}

IdProto::~IdProto() {
  // @@protoc_insertion_point(destructor:cn.edu.cn.tsinghua.hdfs.protocol.IdProto)
  SharedDtor();
}

void IdProto::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void IdProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* IdProto::descriptor() {
  ::protobuf_HdfsProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HdfsProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IdProto& IdProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HdfsProtocol_2eproto::scc_info_IdProto.base);
  return *internal_default_instance();
}


void IdProto::Clear() {
// @@protoc_insertion_point(message_clear_start:cn.edu.cn.tsinghua.hdfs.protocol.IdProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&rpcport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&socketport_) -
      reinterpret_cast<char*>(&rpcport_)) + sizeof(socketport_));
  _internal_metadata_.Clear();
}

bool IdProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cn.edu.cn.tsinghua.hdfs.protocol.IdProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ip()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->ip().data(), static_cast<int>(this->ip().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cn.edu.cn.tsinghua.hdfs.protocol.IdProto.ip"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rpcPort = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rpcport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 socketPort = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &socketport_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cn.edu.cn.tsinghua.hdfs.protocol.IdProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cn.edu.cn.tsinghua.hdfs.protocol.IdProto)
  return false;
#undef DO_
}

void IdProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cn.edu.cn.tsinghua.hdfs.protocol.IdProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cn.edu.cn.tsinghua.hdfs.protocol.IdProto.ip");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ip(), output);
  }

  // uint32 rpcPort = 2;
  if (this->rpcport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rpcport(), output);
  }

  // uint32 socketPort = 3;
  if (this->socketport() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->socketport(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cn.edu.cn.tsinghua.hdfs.protocol.IdProto)
}

::google::protobuf::uint8* IdProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cn.edu.cn.tsinghua.hdfs.protocol.IdProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->ip().data(), static_cast<int>(this->ip().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cn.edu.cn.tsinghua.hdfs.protocol.IdProto.ip");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ip(), target);
  }

  // uint32 rpcPort = 2;
  if (this->rpcport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rpcport(), target);
  }

  // uint32 socketPort = 3;
  if (this->socketport() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->socketport(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cn.edu.cn.tsinghua.hdfs.protocol.IdProto)
  return target;
}

size_t IdProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cn.edu.cn.tsinghua.hdfs.protocol.IdProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ip());
  }

  // uint32 rpcPort = 2;
  if (this->rpcport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rpcport());
  }

  // uint32 socketPort = 3;
  if (this->socketport() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->socketport());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IdProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cn.edu.cn.tsinghua.hdfs.protocol.IdProto)
  GOOGLE_DCHECK_NE(&from, this);
  const IdProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const IdProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cn.edu.cn.tsinghua.hdfs.protocol.IdProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cn.edu.cn.tsinghua.hdfs.protocol.IdProto)
    MergeFrom(*source);
  }
}

void IdProto::MergeFrom(const IdProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cn.edu.cn.tsinghua.hdfs.protocol.IdProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.rpcport() != 0) {
    set_rpcport(from.rpcport());
  }
  if (from.socketport() != 0) {
    set_socketport(from.socketport());
  }
}

void IdProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cn.edu.cn.tsinghua.hdfs.protocol.IdProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IdProto::CopyFrom(const IdProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cn.edu.cn.tsinghua.hdfs.protocol.IdProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IdProto::IsInitialized() const {
  return true;
}

void IdProto::Swap(IdProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void IdProto::InternalSwap(IdProto* other) {
  using std::swap;
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(rpcport_, other->rpcport_);
  swap(socketport_, other->socketport_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata IdProto::GetMetadata() const {
  protobuf_HdfsProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HdfsProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BlockProto::InitAsDefaultInstance() {
  ::cn::edu::cn::tsinghua::hdfs::protocol::_BlockProto_default_instance_._instance.get_mutable()->id_ = const_cast< ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto*>(
      ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockProto::kIdFieldNumber;
const int BlockProto::kSrcFieldNumber;
const int BlockProto::kOffsetFieldNumber;
const int BlockProto::kLengthFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockProto::BlockProto()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_HdfsProtocol_2eproto::scc_info_BlockProto.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:cn.edu.cn.tsinghua.hdfs.protocol.BlockProto)
}
BlockProto::BlockProto(const BlockProto& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.src().size() > 0) {
    src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_);
  }
  if (from.has_id()) {
    id_ = new ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto(*from.id_);
  } else {
    id_ = NULL;
  }
  ::memcpy(&offset_, &from.offset_,
    static_cast<size_t>(reinterpret_cast<char*>(&length_) -
    reinterpret_cast<char*>(&offset_)) + sizeof(length_));
  // @@protoc_insertion_point(copy_constructor:cn.edu.cn.tsinghua.hdfs.protocol.BlockProto)
}

void BlockProto::SharedCtor() {
  src_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&length_) -
      reinterpret_cast<char*>(&id_)) + sizeof(length_));
}

BlockProto::~BlockProto() {
  // @@protoc_insertion_point(destructor:cn.edu.cn.tsinghua.hdfs.protocol.BlockProto)
  SharedDtor();
}

void BlockProto::SharedDtor() {
  src_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete id_;
}

void BlockProto::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BlockProto::descriptor() {
  ::protobuf_HdfsProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HdfsProtocol_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlockProto& BlockProto::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_HdfsProtocol_2eproto::scc_info_BlockProto.base);
  return *internal_default_instance();
}


void BlockProto::Clear() {
// @@protoc_insertion_point(message_clear_start:cn.edu.cn.tsinghua.hdfs.protocol.BlockProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  ::memset(&offset_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&length_) -
      reinterpret_cast<char*>(&offset_)) + sizeof(length_));
  _internal_metadata_.Clear();
}

bool BlockProto::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:cn.edu.cn.tsinghua.hdfs.protocol.BlockProto)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .cn.edu.cn.tsinghua.hdfs.protocol.IdProto id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string src = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->src().data(), static_cast<int>(this->src().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "cn.edu.cn.tsinghua.hdfs.protocol.BlockProto.src"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 offset = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 length = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &length_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:cn.edu.cn.tsinghua.hdfs.protocol.BlockProto)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:cn.edu.cn.tsinghua.hdfs.protocol.BlockProto)
  return false;
#undef DO_
}

void BlockProto::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:cn.edu.cn.tsinghua.hdfs.protocol.BlockProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .cn.edu.cn.tsinghua.hdfs.protocol.IdProto id = 1;
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_id(), output);
  }

  // string src = 2;
  if (this->src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->src().data(), static_cast<int>(this->src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cn.edu.cn.tsinghua.hdfs.protocol.BlockProto.src");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->src(), output);
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->offset(), output);
  }

  // uint64 length = 4;
  if (this->length() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->length(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:cn.edu.cn.tsinghua.hdfs.protocol.BlockProto)
}

::google::protobuf::uint8* BlockProto::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:cn.edu.cn.tsinghua.hdfs.protocol.BlockProto)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .cn.edu.cn.tsinghua.hdfs.protocol.IdProto id = 1;
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_id(), deterministic, target);
  }

  // string src = 2;
  if (this->src().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->src().data(), static_cast<int>(this->src().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "cn.edu.cn.tsinghua.hdfs.protocol.BlockProto.src");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->src(), target);
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->offset(), target);
  }

  // uint64 length = 4;
  if (this->length() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->length(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:cn.edu.cn.tsinghua.hdfs.protocol.BlockProto)
  return target;
}

size_t BlockProto::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:cn.edu.cn.tsinghua.hdfs.protocol.BlockProto)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string src = 2;
  if (this->src().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->src());
  }

  // .cn.edu.cn.tsinghua.hdfs.protocol.IdProto id = 1;
  if (this->has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *id_);
  }

  // uint64 offset = 3;
  if (this->offset() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->offset());
  }

  // uint64 length = 4;
  if (this->length() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->length());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlockProto::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:cn.edu.cn.tsinghua.hdfs.protocol.BlockProto)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockProto* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockProto>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:cn.edu.cn.tsinghua.hdfs.protocol.BlockProto)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:cn.edu.cn.tsinghua.hdfs.protocol.BlockProto)
    MergeFrom(*source);
  }
}

void BlockProto::MergeFrom(const BlockProto& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:cn.edu.cn.tsinghua.hdfs.protocol.BlockProto)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.src().size() > 0) {

    src_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.src_);
  }
  if (from.has_id()) {
    mutable_id()->::cn::edu::cn::tsinghua::hdfs::protocol::IdProto::MergeFrom(from.id());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
  if (from.length() != 0) {
    set_length(from.length());
  }
}

void BlockProto::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:cn.edu.cn.tsinghua.hdfs.protocol.BlockProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockProto::CopyFrom(const BlockProto& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:cn.edu.cn.tsinghua.hdfs.protocol.BlockProto)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockProto::IsInitialized() const {
  return true;
}

void BlockProto::Swap(BlockProto* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockProto::InternalSwap(BlockProto* other) {
  using std::swap;
  src_.Swap(&other->src_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(id_, other->id_);
  swap(offset_, other->offset_);
  swap(length_, other->length_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BlockProto::GetMetadata() const {
  protobuf_HdfsProtocol_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_HdfsProtocol_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protocol
}  // namespace hdfs
}  // namespace tsinghua
}  // namespace cn
}  // namespace edu
}  // namespace cn
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cn::edu::cn::tsinghua::hdfs::protocol::PathProto* Arena::CreateMaybeMessage< ::cn::edu::cn::tsinghua::hdfs::protocol::PathProto >(Arena* arena) {
  return Arena::CreateInternal< ::cn::edu::cn::tsinghua::hdfs::protocol::PathProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto* Arena::CreateMaybeMessage< ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto >(Arena* arena) {
  return Arena::CreateInternal< ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::cn::edu::cn::tsinghua::hdfs::protocol::BlockProto* Arena::CreateMaybeMessage< ::cn::edu::cn::tsinghua::hdfs::protocol::BlockProto >(Arena* arena) {
  return Arena::CreateInternal< ::cn::edu::cn::tsinghua::hdfs::protocol::BlockProto >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

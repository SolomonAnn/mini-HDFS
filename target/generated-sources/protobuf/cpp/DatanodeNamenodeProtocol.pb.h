// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DatanodeNamenodeProtocol.proto

#ifndef PROTOBUF_INCLUDED_DatanodeNamenodeProtocol_2eproto
#define PROTOBUF_INCLUDED_DatanodeNamenodeProtocol_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "HdfsProtocol.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_DatanodeNamenodeProtocol_2eproto 

namespace protobuf_DatanodeNamenodeProtocol_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_DatanodeNamenodeProtocol_2eproto
namespace cn {
namespace edu {
namespace cn {
namespace tsinghua {
namespace hdfs {
namespace protocol {
class HeartbeatRequestProto;
class HeartbeatRequestProtoDefaultTypeInternal;
extern HeartbeatRequestProtoDefaultTypeInternal _HeartbeatRequestProto_default_instance_;
class HeartbeatResponseProto;
class HeartbeatResponseProtoDefaultTypeInternal;
extern HeartbeatResponseProtoDefaultTypeInternal _HeartbeatResponseProto_default_instance_;
class RegisterRequestProto;
class RegisterRequestProtoDefaultTypeInternal;
extern RegisterRequestProtoDefaultTypeInternal _RegisterRequestProto_default_instance_;
class RegisterResponseProto;
class RegisterResponseProtoDefaultTypeInternal;
extern RegisterResponseProtoDefaultTypeInternal _RegisterResponseProto_default_instance_;
}  // namespace protocol
}  // namespace hdfs
}  // namespace tsinghua
}  // namespace cn
}  // namespace edu
}  // namespace cn
namespace google {
namespace protobuf {
template<> ::cn::edu::cn::tsinghua::hdfs::protocol::HeartbeatRequestProto* Arena::CreateMaybeMessage<::cn::edu::cn::tsinghua::hdfs::protocol::HeartbeatRequestProto>(Arena*);
template<> ::cn::edu::cn::tsinghua::hdfs::protocol::HeartbeatResponseProto* Arena::CreateMaybeMessage<::cn::edu::cn::tsinghua::hdfs::protocol::HeartbeatResponseProto>(Arena*);
template<> ::cn::edu::cn::tsinghua::hdfs::protocol::RegisterRequestProto* Arena::CreateMaybeMessage<::cn::edu::cn::tsinghua::hdfs::protocol::RegisterRequestProto>(Arena*);
template<> ::cn::edu::cn::tsinghua::hdfs::protocol::RegisterResponseProto* Arena::CreateMaybeMessage<::cn::edu::cn::tsinghua::hdfs::protocol::RegisterResponseProto>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace cn {
namespace edu {
namespace cn {
namespace tsinghua {
namespace hdfs {
namespace protocol {

// ===================================================================

class RegisterRequestProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto) */ {
 public:
  RegisterRequestProto();
  virtual ~RegisterRequestProto();

  RegisterRequestProto(const RegisterRequestProto& from);

  inline RegisterRequestProto& operator=(const RegisterRequestProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisterRequestProto(RegisterRequestProto&& from) noexcept
    : RegisterRequestProto() {
    *this = ::std::move(from);
  }

  inline RegisterRequestProto& operator=(RegisterRequestProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterRequestProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegisterRequestProto* internal_default_instance() {
    return reinterpret_cast<const RegisterRequestProto*>(
               &_RegisterRequestProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(RegisterRequestProto* other);
  friend void swap(RegisterRequestProto& a, RegisterRequestProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisterRequestProto* New() const final {
    return CreateMaybeMessage<RegisterRequestProto>(NULL);
  }

  RegisterRequestProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RegisterRequestProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RegisterRequestProto& from);
  void MergeFrom(const RegisterRequestProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegisterRequestProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cn.edu.cn.tsinghua.hdfs.protocol.IdProto id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto& _internal_id() const;
  public:
  const ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto& id() const;
  ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto* release_id();
  ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto* mutable_id();
  void set_allocated_id(::cn::edu::cn::tsinghua::hdfs::protocol::IdProto* id);

  // @@protoc_insertion_point(class_scope:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto* id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_DatanodeNamenodeProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RegisterResponseProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.edu.cn.tsinghua.hdfs.protocol.RegisterResponseProto) */ {
 public:
  RegisterResponseProto();
  virtual ~RegisterResponseProto();

  RegisterResponseProto(const RegisterResponseProto& from);

  inline RegisterResponseProto& operator=(const RegisterResponseProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  RegisterResponseProto(RegisterResponseProto&& from) noexcept
    : RegisterResponseProto() {
    *this = ::std::move(from);
  }

  inline RegisterResponseProto& operator=(RegisterResponseProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const RegisterResponseProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RegisterResponseProto* internal_default_instance() {
    return reinterpret_cast<const RegisterResponseProto*>(
               &_RegisterResponseProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(RegisterResponseProto* other);
  friend void swap(RegisterResponseProto& a, RegisterResponseProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline RegisterResponseProto* New() const final {
    return CreateMaybeMessage<RegisterResponseProto>(NULL);
  }

  RegisterResponseProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<RegisterResponseProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const RegisterResponseProto& from);
  void MergeFrom(const RegisterResponseProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RegisterResponseProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool isSuccessful = 1;
  void clear_issuccessful();
  static const int kIsSuccessfulFieldNumber = 1;
  bool issuccessful() const;
  void set_issuccessful(bool value);

  // @@protoc_insertion_point(class_scope:cn.edu.cn.tsinghua.hdfs.protocol.RegisterResponseProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool issuccessful_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_DatanodeNamenodeProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HeartbeatRequestProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto) */ {
 public:
  HeartbeatRequestProto();
  virtual ~HeartbeatRequestProto();

  HeartbeatRequestProto(const HeartbeatRequestProto& from);

  inline HeartbeatRequestProto& operator=(const HeartbeatRequestProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeartbeatRequestProto(HeartbeatRequestProto&& from) noexcept
    : HeartbeatRequestProto() {
    *this = ::std::move(from);
  }

  inline HeartbeatRequestProto& operator=(HeartbeatRequestProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatRequestProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeartbeatRequestProto* internal_default_instance() {
    return reinterpret_cast<const HeartbeatRequestProto*>(
               &_HeartbeatRequestProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(HeartbeatRequestProto* other);
  friend void swap(HeartbeatRequestProto& a, HeartbeatRequestProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeartbeatRequestProto* New() const final {
    return CreateMaybeMessage<HeartbeatRequestProto>(NULL);
  }

  HeartbeatRequestProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HeartbeatRequestProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HeartbeatRequestProto& from);
  void MergeFrom(const HeartbeatRequestProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeartbeatRequestProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cn.edu.cn.tsinghua.hdfs.protocol.IdProto id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  private:
  const ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto& _internal_id() const;
  public:
  const ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto& id() const;
  ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto* release_id();
  ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto* mutable_id();
  void set_allocated_id(::cn::edu::cn::tsinghua::hdfs::protocol::IdProto* id);

  // bool hasRegistered = 2;
  void clear_hasregistered();
  static const int kHasRegisteredFieldNumber = 2;
  bool hasregistered() const;
  void set_hasregistered(bool value);

  // @@protoc_insertion_point(class_scope:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto* id_;
  bool hasregistered_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_DatanodeNamenodeProtocol_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HeartbeatResponseProto : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatResponseProto) */ {
 public:
  HeartbeatResponseProto();
  virtual ~HeartbeatResponseProto();

  HeartbeatResponseProto(const HeartbeatResponseProto& from);

  inline HeartbeatResponseProto& operator=(const HeartbeatResponseProto& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  HeartbeatResponseProto(HeartbeatResponseProto&& from) noexcept
    : HeartbeatResponseProto() {
    *this = ::std::move(from);
  }

  inline HeartbeatResponseProto& operator=(HeartbeatResponseProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartbeatResponseProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const HeartbeatResponseProto* internal_default_instance() {
    return reinterpret_cast<const HeartbeatResponseProto*>(
               &_HeartbeatResponseProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(HeartbeatResponseProto* other);
  friend void swap(HeartbeatResponseProto& a, HeartbeatResponseProto& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline HeartbeatResponseProto* New() const final {
    return CreateMaybeMessage<HeartbeatResponseProto>(NULL);
  }

  HeartbeatResponseProto* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<HeartbeatResponseProto>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const HeartbeatResponseProto& from);
  void MergeFrom(const HeartbeatResponseProto& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HeartbeatResponseProto* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool isSuccessful = 1;
  void clear_issuccessful();
  static const int kIsSuccessfulFieldNumber = 1;
  bool issuccessful() const;
  void set_issuccessful(bool value);

  // @@protoc_insertion_point(class_scope:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatResponseProto)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool issuccessful_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_DatanodeNamenodeProtocol_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// RegisterRequestProto

// .cn.edu.cn.tsinghua.hdfs.protocol.IdProto id = 1;
inline bool RegisterRequestProto::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto& RegisterRequestProto::_internal_id() const {
  return *id_;
}
inline const ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto& RegisterRequestProto::id() const {
  const ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto* p = id_;
  // @@protoc_insertion_point(field_get:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto.id)
  return p != NULL ? *p : *reinterpret_cast<const ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto*>(
      &::cn::edu::cn::tsinghua::hdfs::protocol::_IdProto_default_instance_);
}
inline ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto* RegisterRequestProto::release_id() {
  // @@protoc_insertion_point(field_release:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto.id)
  
  ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto* RegisterRequestProto::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::cn::edu::cn::tsinghua::hdfs::protocol::IdProto>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto.id)
  return id_;
}
inline void RegisterRequestProto::set_allocated_id(::cn::edu::cn::tsinghua::hdfs::protocol::IdProto* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:cn.edu.cn.tsinghua.hdfs.protocol.RegisterRequestProto.id)
}

// -------------------------------------------------------------------

// RegisterResponseProto

// bool isSuccessful = 1;
inline void RegisterResponseProto::clear_issuccessful() {
  issuccessful_ = false;
}
inline bool RegisterResponseProto::issuccessful() const {
  // @@protoc_insertion_point(field_get:cn.edu.cn.tsinghua.hdfs.protocol.RegisterResponseProto.isSuccessful)
  return issuccessful_;
}
inline void RegisterResponseProto::set_issuccessful(bool value) {
  
  issuccessful_ = value;
  // @@protoc_insertion_point(field_set:cn.edu.cn.tsinghua.hdfs.protocol.RegisterResponseProto.isSuccessful)
}

// -------------------------------------------------------------------

// HeartbeatRequestProto

// .cn.edu.cn.tsinghua.hdfs.protocol.IdProto id = 1;
inline bool HeartbeatRequestProto::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto& HeartbeatRequestProto::_internal_id() const {
  return *id_;
}
inline const ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto& HeartbeatRequestProto::id() const {
  const ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto* p = id_;
  // @@protoc_insertion_point(field_get:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto.id)
  return p != NULL ? *p : *reinterpret_cast<const ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto*>(
      &::cn::edu::cn::tsinghua::hdfs::protocol::_IdProto_default_instance_);
}
inline ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto* HeartbeatRequestProto::release_id() {
  // @@protoc_insertion_point(field_release:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto.id)
  
  ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::cn::edu::cn::tsinghua::hdfs::protocol::IdProto* HeartbeatRequestProto::mutable_id() {
  
  if (id_ == NULL) {
    auto* p = CreateMaybeMessage<::cn::edu::cn::tsinghua::hdfs::protocol::IdProto>(GetArenaNoVirtual());
    id_ = p;
  }
  // @@protoc_insertion_point(field_mutable:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto.id)
  return id_;
}
inline void HeartbeatRequestProto::set_allocated_id(::cn::edu::cn::tsinghua::hdfs::protocol::IdProto* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto.id)
}

// bool hasRegistered = 2;
inline void HeartbeatRequestProto::clear_hasregistered() {
  hasregistered_ = false;
}
inline bool HeartbeatRequestProto::hasregistered() const {
  // @@protoc_insertion_point(field_get:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto.hasRegistered)
  return hasregistered_;
}
inline void HeartbeatRequestProto::set_hasregistered(bool value) {
  
  hasregistered_ = value;
  // @@protoc_insertion_point(field_set:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatRequestProto.hasRegistered)
}

// -------------------------------------------------------------------

// HeartbeatResponseProto

// bool isSuccessful = 1;
inline void HeartbeatResponseProto::clear_issuccessful() {
  issuccessful_ = false;
}
inline bool HeartbeatResponseProto::issuccessful() const {
  // @@protoc_insertion_point(field_get:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatResponseProto.isSuccessful)
  return issuccessful_;
}
inline void HeartbeatResponseProto::set_issuccessful(bool value) {
  
  issuccessful_ = value;
  // @@protoc_insertion_point(field_set:cn.edu.cn.tsinghua.hdfs.protocol.HeartbeatResponseProto.isSuccessful)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol
}  // namespace hdfs
}  // namespace tsinghua
}  // namespace cn
}  // namespace edu
}  // namespace cn

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_DatanodeNamenodeProtocol_2eproto
